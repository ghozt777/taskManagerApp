{"ast":null,"code":"var _jsxFileName = \"/Users/lonewolf777/Documents/todo/src/components/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport { useTasks } from './Context';\nimport { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Input = () => {\n  _s();\n\n  const {\n    setTodo\n  } = useTasks();\n  const [text, setText] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input input__todo\",\n        type: \"text\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input btn\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => setTodo({\n            type: 'ADD_TASK',\n            payload: {\n              description: text\n            }\n          }),\n          children: \"add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTodo({\n            type: 'DELETE_ALL'\n          }),\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Delete All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Input, \"/H46roPK+5rM3UW2ZcywL1vilTQ=\", false, function () {\n  return [useTasks];\n});\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/lonewolf777/Documents/todo/src/components/Input.jsx"],"names":["useTasks","useState","Button","Input","setTodo","text","setText","e","target","value","type","payload","description"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;;AACA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAM;AAACC,IAAAA;AAAD,MAAYJ,QAAQ,EAA1B;AACA,QAAM,CAACK,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AACA,QAAA,SAAS,EAAC,mBADV;AAEA,QAAA,IAAI,EAAC,MAFL;AAEY,QAAA,QAAQ,EAAKM,CAAD,IAAOD,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAFtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAE,WAAhB;AAAA,gCAEA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAG,WAAlB;AAA8B,UAAA,KAAK,EAAG,WAAtC;AACA,UAAA,OAAO,EAAK,MAAML,OAAO,CAAC;AAACM,YAAAA,IAAI,EAAC,UAAN;AAAmBC,YAAAA,OAAO,EAAC;AAACC,cAAAA,WAAW,EAACP;AAAb;AAA3B,WAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAMA,QAAC,MAAD;AACA,UAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAACM,YAAAA,IAAI,EAAC;AAAN,WAAD,CADtB;AAEA,UAAA,OAAO,EAAG,WAFV;AAEsB,UAAA,KAAK,EAAG,WAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAsBH,CAzBM;;GAAMP,K;UACSH,Q;;;KADTG,K","sourcesContent":["import { useTasks } from './Context'\nimport { useState } from 'react'\nimport { Button } from '@material-ui/core'\nexport const Input = () => {\n    const {setTodo} = useTasks()\n    const [text,setText] = useState('')\n    return(\n        <>\n        <div className='input'>\n            <input \n            className='input input__todo'\n            type='text' onChange = {(e) => setText(e.target.value)} />\n            <div className= 'input btn'>\n\n            <Button variant = 'contained' color = 'secondary'\n            onClick = { () => setTodo({type:'ADD_TASK' , payload:{description:text}}) }>\n                add task\n            </Button>\n            <Button \n            onClick={() => setTodo({type:'DELETE_ALL'})}\n            variant = 'contained' color = 'secondary'>\n                Delete All Tasks\n            </Button>\n\n            </div>\n        </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}