{"ast":null,"code":"var _jsxFileName = \"/Users/lonewolf777/Documents/todo/src/components/Context/TaskProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useReducer } from 'react';\nimport { useLogin } from './LastLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const useTasks = () => {\n  _s();\n\n  return useContext(DataContext);\n};\n\n_s(useTasks, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction reducer(prevState, action) {\n  switch (action.type) {\n    case 'INITIAL_LOGIN':\n      return [...action.payload];\n\n    case 'ADD_TASK':\n      return [...prevState, action.payload];\n\n    case 'DELETE_TASK':\n      let temp = [];\n\n      for (let i = 0; i < action.payload.id; i++) temp = [...temp, prevState[i]];\n\n      for (let i = action.payload.id + 1; i < prevState.length; i++) temp = [...temp, prevState[i]];\n\n      return [...temp];\n\n    case 'DELETE_ALL':\n      return [];\n\n    default:\n      return [...prevState];\n  }\n}\n\nexport const TaskProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [todo, setTodo] = useReducer(reducer, []);\n  const {\n    lastLogin,\n    setLastLogin\n  } = useLogin();\n  useEffect(() => {\n    const data = localStorage.getItem('my-todo-list');\n\n    if (data) {\n      setTodo({\n        type: 'INITIAL_LOGIN',\n        payload: JSON.parse(data)\n      });\n    }\n  }, []);\n  useEffect(() => {\n    setLastLogin(prevState => {\n      return { ...prevState,\n        count: prevState + 1\n      };\n    });\n    localStorage.setItem('my-todo-list', JSON.stringify(todo));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        todo,\n        setTodo\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(TaskProvider, \"Rv9Cd0n4fEX428ZzACYqGSp8W84=\", false, function () {\n  return [useLogin];\n});\n\n_c = TaskProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"sources":["/Users/lonewolf777/Documents/todo/src/components/Context/TaskProvider.jsx"],"names":["createContext","useContext","useEffect","useReducer","useLogin","DataContext","useTasks","reducer","prevState","action","type","payload","temp","i","id","length","TaskProvider","children","todo","setTodo","lastLogin","setLastLogin","data","localStorage","getItem","JSON","parse","count","setItem","stringify"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AACA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEA,OAAO,MAAMM,QAAQ,GAAG;AAAA;;AAAA,SAAML,UAAU,CAACI,WAAD,CAAhB;AAAA,CAAjB;;GAAMC,Q;;AAGb,SAASC,OAAT,CAAkBC,SAAlB,EAA8BC,MAA9B,EAAsC;AAClC,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,eAAL;AACI,aAAM,CAAC,GAAGD,MAAM,CAACE,OAAX,CAAN;;AACJ,SAAK,UAAL;AACI,aAAM,CAAC,GAAGH,SAAJ,EAAgBC,MAAM,CAACE,OAAvB,CAAN;;AACJ,SAAK,aAAL;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEJ,MAAM,CAACE,OAAP,CAAeG,EAAjC,EAAsCD,CAAC,EAAvC,EAA2CD,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAWJ,SAAS,CAACK,CAAD,CAApB,CAAP;;AAC3C,WAAI,IAAIA,CAAC,GAAGJ,MAAM,CAACE,OAAP,CAAeG,EAAf,GAAkB,CAA9B,EAAkCD,CAAC,GAAEL,SAAS,CAACO,MAA/C,EAAwDF,CAAC,EAAzD,EAA6DD,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAWJ,SAAS,CAACK,CAAD,CAApB,CAAP;;AACzD,aAAO,CAAC,GAAGD,IAAJ,CAAP;;AACJ,SAAK,YAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAM,CAAC,GAAGJ,SAAJ,CAAN;AAdR;AAgBH;;AAED,OAAO,MAAMQ,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAExC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBhB,UAAU,CAACI,OAAD,EAAW,EAAX,CAAjC;AACA,QAAM;AAACa,IAAAA,SAAD;AAAaC,IAAAA;AAAb,MAA6BjB,QAAQ,EAA3C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;;AACA,QAAGF,IAAH,EAAQ;AACJH,MAAAA,OAAO,CAAC;AACJT,QAAAA,IAAI,EAAC,eADD;AAEJC,QAAAA,OAAO,EAACc,IAAI,CAACC,KAAL,CAAWJ,IAAX;AAFJ,OAAD,CAAP;AAIH;AAGJ,GAVQ,EAUP,EAVO,CAAT;AAaApB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,YAAY,CAAEb,SAAD,IAAe;AACxB,aAAM,EACF,GAAGA,SADD;AAEFmB,QAAAA,KAAK,EAAEnB,SAAS,GAAE;AAFhB,OAAN;AAIH,KALW,CAAZ;AAMAe,IAAAA,YAAY,CAACK,OAAb,CAAqB,cAArB,EAAsCH,IAAI,CAACI,SAAL,CAAeX,IAAf,CAAtC;AAEH,GATQ,CAAT;AAaA,sBACK;AAAA,2BACG,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAACA,QAAAA,IAAD;AAAMC,QAAAA;AAAN,OAA7B;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA;AADH,mBADL;AAOF,CAtCK;;IAAMD,Y;UAG0BZ,Q;;;KAH1BY,Y","sourcesContent":["import { createContext, useContext, useEffect, useReducer } from 'react' \nimport { useLogin } from './LastLogin'\nconst DataContext = createContext()\n\nexport const useTasks = () => useContext(DataContext)\n\n\nfunction reducer (prevState , action) {\n    switch(action.type){\n        \n        case 'INITIAL_LOGIN':\n            return[...action.payload]\n        case 'ADD_TASK':\n            return[...prevState , action.payload]\n        case 'DELETE_TASK':\n        let temp = []    \n        for(let i = 0 ;i< action.payload.id ; i++) temp = [...temp , prevState[i]]\n        for(let i = action.payload.id+1 ; i< prevState.length ; i++) temp = [...temp , prevState[i]]   \n            return [...temp]\n        case 'DELETE_ALL':\n            return []\n        default:\n            return[...prevState]\n    }\n}\n\nexport const TaskProvider = ({children}) => {\n     \n    const [todo,setTodo] = useReducer(reducer , [])\n    const {lastLogin , setLastLogin} = useLogin()\n\n    useEffect(() => {\n        const data = localStorage.getItem('my-todo-list')\n        if(data){\n            setTodo({\n                type:'INITIAL_LOGIN',\n                payload:JSON.parse(data)\n            })\n        }\n\n\n    },[])\n\n\n    useEffect(() => {\n        setLastLogin((prevState) => {\n            return{\n                ...prevState,\n                count: prevState +1,\n            }\n        })\n        localStorage.setItem('my-todo-list' , JSON.stringify(todo))\n\n    })\n\n\n\n    return(\n         <>\n            <DataContext.Provider value={{todo,setTodo}}>\n                {children}\n            </DataContext.Provider>\n         </>\n     )\n }"]},"metadata":{},"sourceType":"module"}