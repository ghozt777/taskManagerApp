{"ast":null,"code":"var _jsxFileName = \"/Users/lonewolf777/Documents/todo/src/components/Display.jsx\",\n    _s = $RefreshSig$();\n\nimport { useTasks } from './Context';\nimport { Button } from '@material-ui/core';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Display = () => {\n  _s();\n\n  const {\n    todo,\n    setTodo\n  } = useTasks();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: todo.map((task, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task__list\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '3vh'\n                  },\n                  children: [index + 1, \">  \", task.description, \"  \", /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      marginLeft: '2vh'\n                    },\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => setTodo({\n                      type: 'DELETE_TASK',\n                      payload: {\n                        id: index\n                      }\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(TiDeleteOutline, {\n                      style: {\n                        fontSize: '3vh'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 30,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 41\n                  }, this), \",\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spacer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Display, \"vwXoyguYBTMFEpYtyVcrVWyad9o=\", false, function () {\n  return [useTasks];\n});\n\n_c = Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/lonewolf777/Documents/todo/src/components/Display.jsx"],"names":["useTasks","Button","TiDeleteOutline","AiOutlineClose","Display","todo","setTodo","map","task","index","fontSize","description","marginLeft","type","payload","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAASC,IAAAA;AAAT,MAAqBN,QAAQ,EAAnC;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,+BACI;AAAK,UAAA,SAAS,EAAG,MAAjB;AAAA,oBAEIK,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACrB,gCACI;AAAA,sCACA;AAAK,gBAAA,SAAS,EAAG,YAAjB;AAAA,uCACI;AAAK,kBAAA,KAAK,EAAE;AAACC,oBAAAA,QAAQ,EAAC;AAAV,mBAAZ;AAAA,6BACKD,KAAK,GAAC,CADX,EACc,KADd,EACqBD,IAAI,CAACG,WAD1B,EACuC,IADvC,eAEI,QAAC,MAAD;AACI,oBAAA,KAAK,EAAE;AAACC,sBAAAA,UAAU,EAAC;AAAZ,qBADX;AAEI,oBAAA,OAAO,EAAC,WAFZ;AAEwB,oBAAA,KAAK,EAAC,SAF9B;AAGI,oBAAA,OAAO,EAAE,MAAMN,OAAO,CAAC;AAACO,sBAAAA,IAAI,EAAC,aAAN;AAAsBC,sBAAAA,OAAO,EAAC;AAACC,wBAAAA,EAAE,EAACN;AAAJ;AAA9B,qBAAD,CAH1B;AAAA,2CAII,QAAC,eAAD;AAAiB,sBAAA,KAAK,EAAE;AAACC,wBAAAA,QAAQ,EAAC;AAAV;AAAxB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADA,eAaA;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBAbA;AAAA,4BADJ;AAiBH,WAlBD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqCH,CAxCM;;GAAMN,O;UACkBJ,Q;;;KADlBI,O","sourcesContent":["import { useTasks } from './Context'\nimport { Button } from '@material-ui/core'\nimport { TiDeleteOutline } from 'react-icons/ti'\nimport { AiOutlineClose } from 'react-icons/ai'\nexport const Display = () => {\n    const { todo , setTodo}  = useTasks()\n    \n    return(\n        <>\n            <div className='display'>\n                <div>\n                    <h1>\n                        Your Tasks:\n                    </h1>\n                </div>\n                <div className='spacer' ></div>\n                <div>\n                    <div className = 'list'>\n                    {\n                        todo.map((task,index) => {\n                            return(\n                                <>\n                                <div className = 'task__list'>\n                                    <div style={{fontSize:'3vh'}}>\n                                        {index+1}{\">  \"}{task.description}{\"  \"}\n                                        <Button \n                                            style={{marginLeft:'2vh'}}\n                                            variant='contained' color='primary'\n                                            onClick={() => setTodo({type:'DELETE_TASK' , payload:{id:index}})}> \n                                            <TiDeleteOutline style={{fontSize:'3vh'}}/>\n                                        </Button>\n                                        ,\n                                    </div>\n                                </div>\n                                <div className='spacer'></div>\n                                </>\n                            )\n                        })\n                    }\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}