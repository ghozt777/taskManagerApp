{"ast":null,"code":"var _jsxFileName = \"/Users/lonewolf777/Documents/todo/src/components/Context/TaskProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const useTasks = () => {\n  _s();\n\n  return useContext(DataContext);\n};\n\n_s(useTasks, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction reducer(prevState, action) {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return [...prevState, action.payload];\n\n    default:\n      return [...prevState];\n  }\n}\n\nexport const TaskProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [todo, setTodo] = useReducer(reducer, []);\n  useEffect(() => {\n    localStorage.setItem('my-todo-list', JSON.stringify);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n      value: {\n        todo,\n        setTodo\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(TaskProvider, \"1KDb2zE4Z8SKxxLk+tic/JTIbvo=\");\n\n_c = TaskProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"sources":["/Users/lonewolf777/Documents/todo/src/components/Context/TaskProvider.jsx"],"names":["createContext","useContext","useEffect","useReducer","DataContext","useTasks","reducer","prevState","action","type","payload","TaskProvider","children","todo","setTodo","localStorage","setItem","JSON","stringify"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;;;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEA,OAAO,MAAMK,QAAQ,GAAG;AAAA;;AAAA,SAAMJ,UAAU,CAACG,WAAD,CAAhB;AAAA,CAAjB;;GAAMC,Q;;AAGb,SAASC,OAAT,CAAkBC,SAAlB,EAA8BC,MAA9B,EAAsC;AAClC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,aAAM,CAAC,GAAGF,SAAJ,EAAgBC,MAAM,CAACE,OAAvB,CAAN;;AACJ;AACI,aAAM,CAAC,GAAGH,SAAJ,CAAN;AAJR;AAMH;;AAED,OAAO,MAAMI,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAExC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBX,UAAU,CAACG,OAAD,EAAW,EAAX,CAAjC;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAsCC,IAAI,CAACC,SAA3C;AACH,GAFQ,CAAT;AAIA,sBACK;AAAA,2BACG,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAACL,QAAAA,IAAD;AAAMC,QAAAA;AAAN,OAA7B;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA;AADH,mBADL;AAOF,CAhBK;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useContext, useEffect, useReducer } from 'react' \n \nconst DataContext = createContext()\n\nexport const useTasks = () => useContext(DataContext)\n\n\nfunction reducer (prevState , action) {\n    switch(action.type){\n        case 'ADD_TASK':\n            return[...prevState , action.payload]\n        default:\n            return[...prevState]\n    }\n}\n\nexport const TaskProvider = ({children}) => {\n     \n    const [todo,setTodo] = useReducer(reducer , [])\n    \n\n    useEffect(() => {\n        localStorage.setItem('my-todo-list' , JSON.stringify)\n    })\n\n    return(\n         <>\n            <DataContext.Provider value={{todo,setTodo}}>\n                {children}\n            </DataContext.Provider>\n         </>\n     )\n }"]},"metadata":{},"sourceType":"module"}