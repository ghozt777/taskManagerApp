{"ast":null,"code":"var _jsxFileName = \"/Users/lonewolf777/Documents/todo/src/components/Display.jsx\",\n    _s = $RefreshSig$();\n\nimport { useTasks } from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Display = () => {\n  _s();\n\n  const {\n    todo,\n    setTodo\n  } = useTasks();\n\n  function printTasks() {\n    if (!todo === '') {\n      todo.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task__list\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [index + 1, \".  \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task\",\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 33\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTodo({\n                type: 'DELETE_TASK',\n                payload: {\n                  id: index\n                }\n              }),\n              children: \"delete task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 25\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" NO TASKS \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: printTasks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Display, \"vwXoyguYBTMFEpYtyVcrVWyad9o=\", false, function () {\n  return [useTasks];\n});\n\n_c = Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/lonewolf777/Documents/todo/src/components/Display.jsx"],"names":["useTasks","Display","todo","setTodo","printTasks","map","task","index","description","type","payload","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,WAAzB;;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAASC,IAAAA;AAAT,MAAqBH,QAAQ,EAAnC;;AAEA,WAASI,UAAT,GAAuB;AACnB,QAAG,CAACF,IAAD,KAAU,EAAb,EAAgB;AACRA,MAAAA,IAAI,CAACG,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACrB,4BACI;AAAI,UAAA,SAAS,EAAG,YAAhB;AAAA,iCACI;AAAA,uBACKA,KAAK,GAAC,CADX,EAEK,KAFL,eAGI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAMK,IANL,eAOI;AAAQ,cAAA,OAAO,EAAE,MAAML,OAAO,CAAC;AAACM,gBAAAA,IAAI,EAAC,aAAN;AAAsBC,gBAAAA,OAAO,EAAC;AAACC,kBAAAA,EAAE,EAACJ;AAAJ;AAA9B,eAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OAhBD;AAiBP,KAlBD,MAkBK;AACD,0BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH;AACJ;;AAED,sBACI;AAAA,2BACI;AAAI,MAAA,SAAS,EAAG,MAAhB;AAAA,gBAEQH,UAAU;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH,CAxCM;;GAAMH,O;UACkBD,Q;;;KADlBC,O","sourcesContent":["import { useTasks } from './Context'\n\nexport const Display = () => {\n    const { todo , setTodo}  = useTasks()\n    \n    function printTasks () {\n        if(!todo === ''){\n                todo.map((task,index) => {\n                    return(\n                        <li className = 'task__list'>\n                            <p>\n                                {index+1}\n                                {\".  \"}\n                                <div className='task'>\n                                    {task.description}\n                                </div>\n                                {\"  \"}\n                                <button onClick={() => setTodo({type:'DELETE_TASK' , payload:{id:index}})}> \n                                    delete task \n                                </button>\n                            </p>\n                        </li>\n                    )\n                })\n        }else{\n            return(\n                <>\n                    <p> NO TASKS </p>\n                </>\n            )\n        }\n    }\n    \n    return(\n        <>\n            <ul className = 'list'>\n                {\n                    printTasks()\n                }\n            </ul>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}